name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build_env:
    name: build env
    runs-on: ubuntu-latest
    steps:
    - name: make nameWithVersion
      id: nameWithVersion
      run: echo "${GITHUB_REPOSITORY#*/}-$(date +'%Y%m%d%H%m%S')" > nameWithVersion
    - name: upload nameWithVersion
      uses: actions/upload-artifact@master
      with:
          name: nameWithVersion
          path: nameWithVersion
  build_web:
    needs: [build_env]
    name: Build Flutter (Web)
    runs-on: ubuntu-latest
    steps:
    - name: make nameWithVersion
      uses: actions/download-artifact@v2
      with:
          name: nameWithVersion
    - id: nameWithVersion
      run: |
          echo "::set-output name=nameWithVersion::$(cat nameWithVersion)"
          rm nameWithVersion
    - uses: actions/checkout@v2
    - uses: subosito/flutter-action@v1
      with:
          channel: 'stable'
    - run: |
          flutter pub get
          flutter build web
          cd build/web
          zip -r ../${{ steps.nameWithVersion.outputs.nameWithVersion }}-web.zip * .[^.]*
          cd ../../
    - name: Archive Production Artifact
      uses: actions/upload-artifact@master
      with:
        name: web-build
        path: build/${{ steps.nameWithVersion.outputs.nameWithVersion }}-web.zip
  build_ios:
    needs: [build_env]
    name: Build Flutter (iOS)
    runs-on: macOS-latest
    steps:
    - name: make nameWithVersion
      uses: actions/download-artifact@v2
      with:
          name: nameWithVersion
    - id: nameWithVersion
      run: |
          echo "::set-output name=nameWithVersion::$(cat nameWithVersion)"
          rm nameWithVersion
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
          channel: 'stable'
    - run: |
          flutter pub get
          flutter clean
          flutter build ios --release --no-codesign
    - name: build ios ipa
      run: |
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r ${{ steps.nameWithVersion.outputs.nameWithVersion }}-ios.ipa Payload
    - name: Upload iPA
      uses: actions/upload-artifact@master
      with:
        name: ios-build
        path: build/ios/iphoneos/${{ steps.nameWithVersion.outputs.nameWithVersion }}-ios.ipa
  build_android:
    needs: [build_env]
    name: Build Flutter (Android)
    runs-on: ubuntu-latest
    steps:
    - name: make nameWithVersion
      uses: actions/download-artifact@v2
      with:
          name: nameWithVersion
    - id: nameWithVersion
      run: |
          echo "::set-output name=nameWithVersion::$(cat nameWithVersion)"
          rm nameWithVersion
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
          channel: 'stable'
    - run: flutter pub get
    - name: sign config
      run: |
          echo "${{ secrets.SIGNING_KEY }}" |base64 -d > android/signing.jks
          echo "${{ secrets.KEY_PROPERTIES }}" > android/key.properties
          echo storeFile=signing.jks >> android/key.properties
    - run: |
          flutter build apk --target-platform android-arm64
          mv build/app/outputs/apk/release/*.apk build/${{ steps.nameWithVersion.outputs.nameWithVersion }}-android.apk
    - name: Upload APK
      uses: actions/upload-artifact@master
      with:
        name: android-build
        path: build/${{ steps.nameWithVersion.outputs.nameWithVersion }}-android.apk
  release:
      needs: [build_env, build_web, build_ios, build_android]
      name: make release
      runs-on: ubuntu-latest
      steps:
      - name: make nameWithVersion
        uses: actions/download-artifact@v2
        with:
            name: nameWithVersion
      - id: nameWithVersion
        run: |
            echo "::set-output name=nameWithVersion::$(cat nameWithVersion)"
            rm nameWithVersion
      - name: download web
        uses: actions/download-artifact@v2
        with:
            name: web-build
      - name: download ios
        uses: actions/download-artifact@v2
        with:
            name: ios-build
      - name: download android
        uses: actions/download-artifact@v2
        with:
            name: android-build
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.nameWithVersion.outputs.nameWithVersion }}
          release_name: ${{ steps.nameWithVersion.outputs.nameWithVersion }}
          body: auto release
          draft: true
          prerelease: false
      - name: Upload Release Asset web
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.nameWithVersion.outputs.nameWithVersion }}-web.zip
          asset_name: ${{ steps.nameWithVersion.outputs.nameWithVersion }}-web.zip
          asset_content_type: application/zip
      - name: Upload Release Asset ios
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.nameWithVersion.outputs.nameWithVersion }}-ios.ipa
          asset_name: ${{ steps.nameWithVersion.outputs.nameWithVersion }}-ios.ipa
          asset_content_type: application/zip
      - name: Upload Release Asset android
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.nameWithVersion.outputs.nameWithVersion }}-android.apk
          asset_name: ${{ steps.nameWithVersion.outputs.nameWithVersion }}-android.apk
          asset_content_type: application/zip
      - name: public release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
